<?php

namespace App\Http\Requests\Rayvarz\Remittance;

use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Contracts\Validation\Validator;
use Illuminate\Http\Exceptions\HttpResponseException;

class CreateRemittanceRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     *
     * @return bool
     */
    public function authorize()
    {
        return true;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array
     */
    public function rules()
    {
        return [
            "requestId" => 'required',
            "hasRemittance" => 'required',
            "fiscalYear" => 'required',
            "warehouseId" => 'required',
            "warehouse" => '',
            "InventoryDocumentTypeId" => '',
            "InventoryDocumentType" => '',
            "DocumentNo" => '',
            "CountNo" => '',
            "DocumentCounter" => '',
            "UpdateDate" => '',
            "ConfirmLevel" => '',
            "DocumentStatusId" => '',
            "DocStatusDsc" => '',
            "DemandedCenterId" => '',
            "DemandedCenter" => '',
            "SupplierId" => '',
            "ReturnFromBuyReasonId" => '',
            "ReturnToInventoryReasonId" => '',
            "InventoryOrderId" => '',
            "Center3Id" => '',
            "Center3" => '',
            "CenterId" => '',
            "Center" => '',
            "GetterOrSenderDocumentNo" => '',
            "DestinationWarehouseId" => '',
            "DestinationWarehouse" => '',
            "DestinationInventoryOrderId" => '',
            "DestinationCenterId" => '',
            "DestinationCenter" => '',
            "SumQtyOut" => '',
            "SumQty" => '',
            "SumAmountOut" => '',
            "SumAmount" => '',
            "SumWeight" => '',
            "TotalPer" => '',
            "OrderRegisterNo" => '',
            "DocumentingCredibilityNo" => '',
            "ProductCode" => '',
            "StnPartNoDesc" => '',
            "StandardProductionAmount" => '',
            "StockTakingCountNo" => '',
            "DocumentEntranceState" => '',
            "createDate" => 'required',
            "ActiveFlag" => '',
            "LockInventoryDocument" => '',
            "RaySys" => '',
            "ReferenceFiscalYear" => '',
            "ReferenceDocumentNo" => '',
            "MultiReference" => '',
            "ReturnFromSaleReceipt" => '',
            "ReturnFromSaleReceiptCase" => '',
            "ReferenceReturnFromSaleReceipt" => '',
            "ReferenceReturnFromSaleReceiptName" => '',
            "ReferenceDocumentTypeId" => '',
            "ReferenceDocumentType" => '',
            "ReferenceReceiptTypeName" => '',
            "IsOneStepSaleIssueShow" => '',
            "IssueItemDataId" => '',
            "DocumentSequence" => '',
            "ActivityFlagDescription" => '',
            "Inactive" => '',
            "SendToAsset" => '',
            "OrginalDocumentno" => '',
            "TransferDocumentNo" => '',
            "Customer" => '',
            "CustomerName" => '',
            "BuyType" => '',
            "BuyTypeDescription" => '',
            "ValueAdditionControl" => '',
            "WeighbridgePaper" => '',
            "AmountAdditionControl" => '',
            "IsControlAccountCenter" => '',
            "UserId" => '',
            "inventoryJournalItems.*.fiscalYear" => '',
            "inventoryJournalItems.*.InventoryJournal" => '',
            "inventoryJournalItems.*.WarehouseId" => '',
            "inventoryJournalItems.*.InventoryDocumentTypeId" => '',
            "inventoryJournalItems.*.DocumentNo" => '',
            "inventoryJournalItems.*.CountNo" => ' ',
            "inventoryJournalItems.*.StockTakingCountNo" => ' ',
            "inventoryJournalItems.*.DocumentEntranceStatus" => ' ',
            "inventoryJournalItems.*.DocumentRow" => ' ',
            "inventoryJournalItems.*.itemDataId" => 'required',
            "inventoryJournalItems.*.ItemData" => '',
            "inventoryJournalItems.*.InventoryRackId" => '',
            "inventoryJournalItems.*.centerId" => 'required',
            "inventoryJournalItems.*.Center" => '',
            "inventoryJournalItems.*.InventoryOrderId" => '',
            "inventoryJournalItems.*.ItemReceiptTypeId" => '',
            "inventoryJournalItems.*.RequestTypeId" => '',
            "inventoryJournalItems.*.ItemConsumptionTypeId" => '',
            "inventoryJournalItems.*.SupplierId" => '',
            "inventoryJournalItems.*.Center3Id" => '',
            "inventoryJournalItems.*.Center3" => '',
            "inventoryJournalItems.*.InventoryModificationReasonId" => '',
            "inventoryJournalItems.*.Serial" => '',
            "inventoryJournalItems.*.qty" => 'required',
            "inventoryJournalItems.*.UnitId" => ' ',
            "inventoryJournalItems.*.Ceofficient" => '',
            "inventoryJournalItems.*.TotalQty" => '',
            "inventoryJournalItems.*.TotalUnit" => '',
            "inventoryJournalItems.*.CountedQtyIn" => '',
            "inventoryJournalItems.*.CountedQtyOut" => '',
            "inventoryJournalItems.*.CountedQty" => '',
            "inventoryJournalItems.*.Weight" => '',
            "inventoryJournalItems.*.WeightUnit" => '',
            "inventoryJournalItems.*.NeedDate" => '',
            "inventoryJournalItems.*.PriceDocumentDate" => '',
            "inventoryJournalItems.*.DocumentOrder" => '',
            "inventoryJournalItems.*.RequestCenter" => '',
            "inventoryJournalItems.*.PrimaryRowNo" => '',
            "inventoryJournalItems.*.Canceled" => '',
            "inventoryJournalItems.*.AmountIn" => '',
            "inventoryJournalItems.*.AmountOut" => '',
            "inventoryJournalItems.*.Amount" => '',
            "inventoryJournalItems.*.ComputedAmountIn" => '',
            "inventoryJournalItems.*.ComputedAmountOut" => '',
            "inventoryJournalItems.*.ComputedAmount" => '',
            "inventoryJournalItems.*.UnitPrice" => '',
            "inventoryJournalItems.*.InstantStockQty" => '',
            "inventoryJournalItems.*.JournalDate" => ' ',
            "inventoryJournalItems.*.OrderReferenceValue" => '',
            "inventoryJournalItems.*.ReferenceConsumptionQty" => '',
            "inventoryJournalItems.*.ModificationQty" => '',
            "inventoryJournalItems.*.ModificationAmount" => '',
            "inventoryJournalItems.*.IsDocumentFirstPeriod" => '',
            "inventoryJournalItems.*.DestinationWarehouseId" => '',
            "inventoryJournalItems.*.FinancialDocumentNo" => '',
            "inventoryJournalItems.*.TollAmtPercent" => '',
            "inventoryJournalItems.*.TollAmtPercentSign" => '',
            "inventoryJournalItems.*.TollAmountOut" => '',
            "inventoryJournalItems.*.TollAmount" => '',
            "inventoryJournalItems.*.TaxamtPercent" => '',
            "inventoryJournalItems.*.TaxAmtPercentSign" => '',
            "inventoryJournalItems.*.TaxAmountOut" => '',
            "inventoryJournalItems.*.TaxAmount" => '',
            "inventoryJournalItems.*.Description" => '',
            "inventoryJournalItems.*.ReferenceDocumentNo" => '',
            "inventoryJournalItems.*.ReferenceRowNo" => '',
            "inventoryJournalItems.*.ReferenceItemDataId" => '',
            "inventoryJournalItems.*.ReferenceWarehouseId" => '',
            "inventoryJournalItems.*.SaleQty" => '',
            "inventoryJournalItems.*.LastReceiptPer" => '',
            "inventoryJournalItems.*.LastIssuePer" => '',
            "inventoryJournalItems.*.AmountedLastReceiptDetails" => '',
            "inventoryJournalItems.*.AmountedLastIssueDetails" => '',
            "inventoryJournalItems.*.InvoiceNo" => '',
            "inventoryJournalItems.*.InvoiceDate" => '',
            "inventoryJournalItems.*.OtherRefrenceDocumentNo" => '',
            "inventoryJournalItems.*.BuyRequestDocumentRow" => '',
            "inventoryJournalItems.*.ReturnFromBuyReason" => '',
            "inventoryJournalItems.*.SetPrice" => '',
            "inventoryJournalItems.*.ReturnToWarehouseReason" => '',
            "inventoryJournalItems.*.SaleItemDataId" => '',
            "inventoryJournalItems.*.SaleRow" => '',
            "inventoryJournalItems.*.TreatyNo" => '',
            "inventoryJournalItems.*.ToPlaque" => '',
            "inventoryJournalItems.*.ChassisNo" => '',
            "inventoryJournalItems.*.WeighBridgePaper" => '',
            "inventoryJournalItems.*.LicenseNo" => '',
            "inventoryJournalItems.*.LoanTerm" => '',
            "inventoryJournalItems.*.Center4Id" => '',
            "inventoryJournalItems.*.Center5Id" => '',
            "inventoryJournalItems.*.AttributiveCredibilityNo" => '',
            "inventoryJournalItems.*.CrdtId" => ' ',
            "inventoryJournalItems.*.TechnicalNo" => '',
            "inventoryJournalItems.*.FromPlaque" => '',
            "inventoryJournalItems.*.MotorNo" => '',
            "inventoryJournalItems.*.BuyRequestRemaining" => '',
            "inventoryJournalItems.*.PropertyLabel" => '',
            "inventoryJournalItems.*.MeetingDate" => '',
            "inventoryJournalItems.*.OrderActiveOrInactive" => '',
            "inventoryJournalItems.*.Center4" => '',
            "inventoryJournalItems.*.Center5" => '',
            "inventoryJournalItems.*.PrtyRow" => '',
            "inventoryJournalItems.*.OrdBuyDoc" => '',
            "inventoryJournalItems.*.OrdBuyRow" => '',
            "inventoryJournalItems.*.PartyFrBuy" => '',
            "inventoryJournalItems.*.RayGuid" => '',
            "inventoryJournalItems.*.State" => '',
            "inventoryJournalItems.*.RowVersion" => '',
            "inventoryJournalItems.*.RayValidationResults" => '',
            "SendSequence"  => '',
            "ShowIssueRcpt" => '',
            "UpdateSequence"  => '',
            "ValueSequence"  => '',
            "PriceDocSt"  => '',
            "RayGuid" => '',
            "State" => '',
            "RowVersion"  => '',
            "RayValidationResults"  => '',
        ];
    }

    public function failedValidation(Validator $validator)
    {
        throw new HttpResponseException(response()->json([
            'success'   => false,
            'message'   => $validator->errors(),
            'data'      => $validator->errors()
        ], 400));
    }
}
